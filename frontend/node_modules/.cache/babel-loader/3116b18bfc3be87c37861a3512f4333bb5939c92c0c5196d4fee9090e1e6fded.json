{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport ticketService from \"./ticketService\";\nconst initialState = {\n  tickets: [],\n  ticket: {},\n  isLoading: false,\n  isError: false,\n  isSuccess: false,\n  message: \"\"\n};\n\n//Create New ticket\nexport const createTicket = createAsyncThunk(\"ticket/createTicket\", async (ticketData, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await ticketService.createTicket(ticketData, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const ticketSlice = createSlice({\n  name: \"ticket\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {}\n});\nexport const {\n  reset\n} = ticketSlice.actions;\nexport default ticketSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","ticketService","initialState","tickets","ticket","isLoading","isError","isSuccess","message","createTicket","ticketData","thunkAPI","token","getState","auth","user","error","response","data","toString","rejectWithValue","ticketSlice","name","reducers","reset","state","extraReducers","builder","actions","reducer"],"sources":["E:/front-to-backend/support-ticket/frontend/src/features/ticket/ticketSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport ticketService from \"./ticketService\"\r\n\r\nconst initialState = {\r\n    tickets: [],\r\n    ticket: {},\r\n    isLoading: false,\r\n    isError: false,\r\n    isSuccess: false,\r\n    message: \"\"\r\n}\r\n\r\n\r\n//Create New ticket\r\nexport const createTicket = createAsyncThunk(\"ticket/createTicket\", async (ticketData, thunkAPI) => {\r\n    try {\r\n        const token = thunkAPI.getState().auth.user.token\r\n        return await ticketService.createTicket(ticketData, token)\r\n    } catch (error) {\r\n        const message = (error.response && error.response.data && error.response.data.message)\r\n            || error.message\r\n            || error.toString()\r\n        return thunkAPI.rejectWithValue(message)\r\n    }\r\n})\r\n\r\nexport const ticketSlice = createSlice({\r\n    name: \"ticket\",\r\n    initialState,\r\n    reducers: {\r\n        reset: (state) => initialState\r\n    },\r\n    extraReducers: (builder) => { }\r\n})\r\n\r\n\r\nexport const { reset } = ticketSlice.actions\r\nexport default ticketSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,EAAE;EACXC,MAAM,EAAE,CAAC,CAAC;EACVC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACb,CAAC;;AAGD;AACA,OAAO,MAAMC,YAAY,GAAGT,gBAAgB,CAAC,qBAAqB,EAAE,OAAOU,UAAU,EAAEC,QAAQ,KAAK;EAChG,IAAI;IACA,MAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAACH,KAAK;IACjD,OAAO,MAAMX,aAAa,CAACQ,YAAY,CAACC,UAAU,EAAEE,KAAK,CAAC;EAC9D,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZ,MAAMR,OAAO,GAAIQ,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACC,IAAI,IAAIF,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACV,OAAO,IAC9EQ,KAAK,CAACR,OAAO,IACbQ,KAAK,CAACG,QAAQ,CAAC,CAAC;IACvB,OAAOR,QAAQ,CAACS,eAAe,CAACZ,OAAO,CAAC;EAC5C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMa,WAAW,GAAGtB,WAAW,CAAC;EACnCuB,IAAI,EAAE,QAAQ;EACdpB,YAAY;EACZqB,QAAQ,EAAE;IACNC,KAAK,EAAGC,KAAK,IAAKvB;EACtB,CAAC;EACDwB,aAAa,EAAGC,OAAO,IAAK,CAAE;AAClC,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEH;AAAM,CAAC,GAAGH,WAAW,CAACO,OAAO;AAC5C,eAAeP,WAAW,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}