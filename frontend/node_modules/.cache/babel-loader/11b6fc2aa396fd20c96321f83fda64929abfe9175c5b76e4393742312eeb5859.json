{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"/api/tickets/\";\nconst createTicket = async (ticketData, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(API_URL, ticketData, config);\n  return response.data;\n};\n\n//get user tickets\nconst getTickets = async token => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL, config);\n  return response.data;\n};\n\n//get user ticket\nconst getTicket = async (ticketId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL + ticketId, config);\n  return response.data;\n};\n\n//close ticket\nconst closeticket = async (ticketId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL + ticketId, config);\n  return response.data;\n};\nconst ticketService = {\n  createTicket,\n  getTickets,\n  getTicket\n};\nexport default ticketService;","map":{"version":3,"names":["axios","API_URL","createTicket","ticketData","token","config","headers","Authorization","response","post","data","getTickets","get","getTicket","ticketId","closeticket","ticketService"],"sources":["E:/front-to-backend/support-ticket/frontend/src/features/ticket/ticketService.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\nconst API_URL = \"/api/tickets/\"\r\n\r\nconst createTicket = async (ticketData, token) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const response = await axios.post(API_URL, ticketData, config)\r\n\r\n    return response.data\r\n}\r\n\r\n\r\n//get user tickets\r\nconst getTickets = async (token) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const response = await axios.get(API_URL, config)\r\n\r\n    return response.data\r\n}\r\n\r\n\r\n\r\n//get user ticket\r\nconst getTicket = async (ticketId, token) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const response = await axios.get(API_URL + ticketId, config)\r\n\r\n    return response.data\r\n}\r\n\r\n\r\n//close ticket\r\nconst closeticket = async (ticketId, token) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const response = await axios.get(API_URL + ticketId, config)\r\n\r\n    return response.data\r\n}\r\n\r\n\r\n\r\n\r\nconst ticketService = {\r\n    createTicket,\r\n    getTickets,\r\n    getTicket\r\n}\r\n\r\n\r\nexport default ticketService"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,eAAe;AAE/B,MAAMC,YAAY,GAAG,MAAAA,CAAOC,UAAU,EAAEC,KAAK,KAAK;EAC9C,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,KAAM;IACnC;EACJ,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAACR,OAAO,EAAEE,UAAU,EAAEE,MAAM,CAAC;EAE9D,OAAOG,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAGD;AACA,MAAMC,UAAU,GAAG,MAAOP,KAAK,IAAK;EAChC,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,KAAM;IACnC;EACJ,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAACX,OAAO,EAAEI,MAAM,CAAC;EAEjD,OAAOG,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAID;AACA,MAAMG,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEV,KAAK,KAAK;EACzC,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,KAAM;IACnC;EACJ,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAACX,OAAO,GAAGa,QAAQ,EAAET,MAAM,CAAC;EAE5D,OAAOG,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAGD;AACA,MAAMK,WAAW,GAAG,MAAAA,CAAOD,QAAQ,EAAEV,KAAK,KAAK;EAC3C,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,KAAM;IACnC;EACJ,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAACX,OAAO,GAAGa,QAAQ,EAAET,MAAM,CAAC;EAE5D,OAAOG,QAAQ,CAACE,IAAI;AACxB,CAAC;AAKD,MAAMM,aAAa,GAAG;EAClBd,YAAY;EACZS,UAAU;EACVE;AACJ,CAAC;AAGD,eAAeG,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}